# -*- coding:utf-8 -*-

import requests
from filetype import guess
from os import rename
from os import makedirs
from os.path import exists
import json
from contextlib import closing

headers = {"User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36"}

def get_photo_type():
    """
    获取可以爬取的壁纸类型
    :return:
    """
    url = "https://service.paper.meiyuan.in/api/v2/columns"
    res = requests.get(url=url, headers=headers, verify=False)
    res_json = json.loads(res.text)
    return res_json



def down_load(file_url, file_full_name, now_photo_count, all_photo_count):
    """
    文件下载器
    :param file_url:
    :param file_full_name:
    :param now_photo_count:
    :param all_photo_count:
    :return:
    """

    # 开始下载图片
    with closing(requests.get(file_url, headers=headers, stream=True)) as response:
        chunk_size = 1024  # 单次请求最大值
        content_size = int(response.headers['content-length'])  # 文件总大小
        data_count = 0  # 当前已传输的大小
        with open(file_full_name, "wb") as file:
            for data in response.iter_content(chunk_size=chunk_size):
                file.write(data)
                done_block = int((data_count / content_size) * 50)
                data_count = data_count + len(data)
                now_jd = (data_count / content_size) * 100
                print("\r %s：[%s%s] %d%% %d/%d" % (file_full_name, done_block * '█', ' ' * (50 - 1 - done_block), now_jd, now_photo_count, all_photo_count), end=" ")

    # 下载完图片后获取图片扩展名，并为其增加扩展名
    file_type = guess(file_full_name)
    rename(file_full_name, file_full_name + '.' + file_type.extension)

def crawler_photo(type_id, photo_count):
    """
    爬取不同类型图片
    :param type_id:
    :param photo_count:
    :return:
    """

    url = 'https://service.paper.meiyuan.in/api/v2/columns/flow/{}?page=1&per_page={}'.format(type_id, photo_count)

    # 获取图片列表数据
    respond = requests.get(url, headers=headers, verify=False)
    photo_data = json.loads(respond.content)

    # 已经下载的图片张数
    now_photo_count = 1

    # 所有图片张数
    all_photo_count = len(photo_data)
